// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render UserInput correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div>
          <h3>
            Data
          </h3>
          <div>
            <textarea
              aria-label="tree-input"
              class="sc-bdfBQB gSvzUv"
              cols="50"
              rows="20"
            >
              [
  {"name": "A", "weight": 3, "value": -0.02},
  {"name": "B", "weight": 3, "value": 0.05},
  {"name": "C", "weight": 6, "value": 0.015},
  {"name": "D", "weight": 2, "value": -0.01},
  {"name": "E", "weight": 3, "value": 0.01}
]
            </textarea>
            <div
              class="sc-gsTEea hxmvRm"
            />
          </div>
        </div>
        <div>
          <h3>
            Row Number
          </h3>
          <div>
            <input
              aria-label="rows-input"
              class="sc-dlfnuX isBgPT"
              max="5"
              min="1"
              type="number"
              value="3"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <h3>
          Data
        </h3>
        <div>
          <textarea
            aria-label="tree-input"
            class="sc-bdfBQB gSvzUv"
            cols="50"
            rows="20"
          >
            [
  {"name": "A", "weight": 3, "value": -0.02},
  {"name": "B", "weight": 3, "value": 0.05},
  {"name": "C", "weight": 6, "value": 0.015},
  {"name": "D", "weight": 2, "value": -0.01},
  {"name": "E", "weight": 3, "value": 0.01}
]
          </textarea>
          <div
            class="sc-gsTEea hxmvRm"
          />
        </div>
      </div>
      <div>
        <h3>
          Row Number
        </h3>
        <div>
          <input
            aria-label="rows-input"
            class="sc-dlfnuX isBgPT"
            max="5"
            min="1"
            type="number"
            value="3"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
